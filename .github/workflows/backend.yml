name: Backend

on:
  push:
    branches: [main]
  pull_request:
env:
  PORT: ${{ vars.PORT }}
  DB_SQLITE_STORAGE_PATH: ${{ vars.DB_SQLITE_STORAGE_PATH }}
  DB_SQLITE_SYNCHRONIZE: ${{ vars.DB_SQLITE_SYNCHRONIZE }}
  DB_BUILD_MODELS: ${{ vars.DB_BUILD_MODELS }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ vars.AWS_REGION }}
  AWS_CEREMONY_BUCKET_POSTFIX: ${{ vars.AWS_CEREMONY_BUCKET_POSTFIX }}
  AWS_S3_CORS_ORIGINS: ${{ vars.AWS_S3_CORS_ORIGINS }}

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22.17.x
          cache: "pnpm"

      - name: Install all dependencies
        run: |
          pnpm install --frozen-lockfile --prefer-offline

      - name: Fix binding files sqlite error
        working-directory: apps/backend/node_modules/sqlite3
        run: |
          pnpm rebuild

      - name: Build all the packages
        run: |
          pnpm run build

      - name: Run tests
        working-directory: apps/backend
        run: |
          pnpm run test

      - name: Run coverage tests
        working-directory: apps/backend
        run: |
          pnpm run test:cov

      - name: Run e2e tests
        working-directory: apps/backend
        run: |
          pnpm run test:e2e
